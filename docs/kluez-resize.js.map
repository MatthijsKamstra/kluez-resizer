{
"version":3,
"file":"kluez-resize.js",
"sourceRoot":"",
"sources":["file:////Users/matthijskamstra/Documents/GIT/kluez-resizer/src/MainResize.hx","file:////Users/matthijskamstra/Documents/GIT/kluez-resizer/src/model/constants/App.hx","file:////usr/local/lib/haxe/std/StringTools.hx","file:////usr/local/lib/haxe/std/haxe/iterators/ArrayIterator.hx"],
"sourcesContent":["package;\n\nimport haxe.Log;\nimport js.Browser.*;\nimport js.Browser;\nimport js.html.*;\nimport model.constants.App;\n\nusing StringTools;\n\n/**\n * @author Matthijs Kamstra aka [mck]\n * MIT\n *\n */\nclass MainResize {\n\tvar container:js.html.DivElement;\n\n\tpublic function new() {\n\t\ttrace(\"Hello 'Kluez-resizer'\");\n\t\tinit();\n\t}\n\n\tfunction init() {\n\t\tdocument.addEventListener(\"DOMContentLoaded\", function(event) {\n\t\t\tconsole.log('${App.NAME} Dom ready :: build: ${App.getBuildDate()} ');\n\t\t\tinitHTML();\n\t\t\tmakeResizableDiv('.resizable');\n\t\t});\n\t}\n\n\tfunction makeResizableDiv(div) {\n\t\tvar element = document.querySelector(div);\n\t\tvar resizers = document.querySelectorAll(div + ' .resizer');\n\t\tvar minimum_size = 20;\n\t\tvar original_width = 0.;\n\t\tvar original_height = 0.;\n\t\tvar original_x = 0.;\n\t\tvar original_y = 0.;\n\t\tvar original_mouse_x = 0.;\n\t\tvar original_mouse_y = 0.;\n\n\t\tfor (i in 0...resizers.length) {\n\t\t\tvar _resizers = resizers[i];\n\t\t\t// trace(_resizers);\n\n\t\t\tvar currentResizer:DivElement = cast resizers[i];\n\n\t\t\tfunction resize(e) {\n\t\t\t\t// trace(cast(currentResizer));\n\t\t\t\tif (currentResizer.classList.contains('bottom-right')) {\n\t\t\t\t\tvar width = original_width + (e.pageX - original_mouse_x);\n\t\t\t\t\tvar height = original_height + (e.pageY - original_mouse_y);\n\t\t\t\t\tif (width > minimum_size) {\n\t\t\t\t\t\telement.style.width = width + 'px';\n\t\t\t\t\t}\n\t\t\t\t\tif (height > minimum_size) {\n\t\t\t\t\t\telement.style.height = height + 'px';\n\t\t\t\t\t}\n\t\t\t\t} else if (currentResizer.classList.contains('bottom-left')) {\n\t\t\t\t\tvar height = original_height + (e.pageY - original_mouse_y);\n\t\t\t\t\tvar width = original_width - (e.pageX - original_mouse_x);\n\t\t\t\t\tif (height > minimum_size) {\n\t\t\t\t\t\telement.style.height = height + 'px';\n\t\t\t\t\t}\n\t\t\t\t\tif (width > minimum_size) {\n\t\t\t\t\t\telement.style.width = width + 'px';\n\t\t\t\t\t\telement.style.left = original_x + (e.pageX - original_mouse_x) + 'px';\n\t\t\t\t\t}\n\t\t\t\t} else if (currentResizer.classList.contains('top-right')) {\n\t\t\t\t\tvar width = original_width + (e.pageX - original_mouse_x);\n\t\t\t\t\tvar height = original_height - (e.pageY - original_mouse_y);\n\t\t\t\t\tif (width > minimum_size) {\n\t\t\t\t\t\telement.style.width = width + 'px';\n\t\t\t\t\t}\n\t\t\t\t\tif (height > minimum_size) {\n\t\t\t\t\t\telement.style.height = height + 'px';\n\t\t\t\t\t\telement.style.top = original_y + (e.pageY - original_mouse_y) + 'px';\n\t\t\t\t\t}\n\t\t\t\t} else if (currentResizer.classList.contains('top-left')) {\n\t\t\t\t\tvar width = original_width - (e.pageX - original_mouse_x);\n\t\t\t\t\tvar height = original_height - (e.pageY - original_mouse_y);\n\t\t\t\t\tif (width > minimum_size) {\n\t\t\t\t\t\telement.style.width = width + 'px';\n\t\t\t\t\t\telement.style.left = original_x + (e.pageX - original_mouse_x) + 'px';\n\t\t\t\t\t}\n\t\t\t\t\tif (height > minimum_size) {\n\t\t\t\t\t\telement.style.height = height + 'px';\n\t\t\t\t\t\telement.style.top = original_y + (e.pageY - original_mouse_y) + 'px';\n\t\t\t\t\t}\n\t\t\t\t} else if (currentResizer.classList.contains('bottom')) {\n\t\t\t\t\tvar width = original_width + (e.pageX - original_mouse_x);\n\t\t\t\t\tvar height = original_height + (e.pageY - original_mouse_y);\n\n\t\t\t\t\tif (height > minimum_size) {\n\t\t\t\t\t\telement.style.height = height + 'px';\n\t\t\t\t\t}\n\t\t\t\t} else if (currentResizer.classList.contains('top')) {\n\t\t\t\t\tvar width = original_width - (e.pageX - original_mouse_x);\n\t\t\t\t\tvar height = original_height - (e.pageY - original_mouse_y);\n\n\t\t\t\t\tif (height > minimum_size) {\n\t\t\t\t\t\telement.style.height = height + 'px';\n\t\t\t\t\t\telement.style.top = original_y + (e.pageY - original_mouse_y) + 'px';\n\t\t\t\t\t}\n\t\t\t\t} else if (currentResizer.classList.contains('right')) {\n\t\t\t\t\tvar width = original_width + (e.pageX - original_mouse_x);\n\t\t\t\t\tvar height = original_height - (e.pageY - original_mouse_y);\n\t\t\t\t\tif (width > minimum_size) {\n\t\t\t\t\t\telement.style.width = width + 'px';\n\t\t\t\t\t}\n\t\t\t\t} else if (currentResizer.classList.contains('left')) {\n\t\t\t\t\tvar width = original_width - (e.pageX - original_mouse_x);\n\t\t\t\t\tvar height = original_height - (e.pageY - original_mouse_y);\n\t\t\t\t\tif (width > minimum_size) {\n\t\t\t\t\t\telement.style.width = width + 'px';\n\t\t\t\t\t\telement.style.left = original_x + (e.pageX - original_mouse_x) + 'px';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttrace(currentResizer.classList);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction stopResize() {\n\t\t\t\twindow.removeEventListener('mousemove', resize);\n\t\t\t}\n\n\t\t\tcurrentResizer.addEventListener('mousedown', function(e) {\n\t\t\t\te.preventDefault();\n\t\t\t\toriginal_width = Std.parseFloat(window.getComputedStyle(element, null).getPropertyValue('width').replace('px', ''));\n\t\t\t\toriginal_height = Std.parseFloat(window.getComputedStyle(element, null).getPropertyValue('height').replace('px', ''));\n\t\t\t\toriginal_x = element.getBoundingClientRect().left;\n\t\t\t\toriginal_y = element.getBoundingClientRect().top;\n\t\t\t\toriginal_mouse_x = e.pageX;\n\t\t\t\toriginal_mouse_y = e.pageY;\n\t\t\t\twindow.addEventListener('mousemove', resize);\n\t\t\t\twindow.addEventListener('mouseup', stopResize);\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction initHTML() {\n\t\tcontainer = cast document.getElementById('kluez-resizer-container');\n\n\t\tvar resizerTemplate = \"\n<div class='resizable'>\n  <div class='resizers'>\n \t<!-- round resizers -->\n    <div class='resizer top-left'></div>\n    <div class='resizer top-right'></div>\n    <div class='resizer bottom-left'></div>\n    <div class='resizer bottom-right'></div>\n \t<!-- square resizers -->\n    <div class='resizer resizer-sq left'></div>\n    <div class='resizer resizer-sq right'></div>\n    <div class='resizer resizer-sq top'></div>\n    <div class='resizer resizer-sq bottom'></div>\n  </div>\n</div>\n\";\n\n\t\tvar frag = document.createRange().createContextualFragment(resizerTemplate);\n\n\t\tcontainer.appendChild(frag);\n\t}\n\n\tstatic public function main() {\n\t\tvar app = new MainResize();\n\t}\n}\n","package model.constants;\n\nimport haxe.macro.Context;\n\nclass App {\n\tpublic static inline var URL : String  = \"https://\";\n\n\tpublic static var NAME : String = \"[example_javascript]\";\n\n\tpublic static inline macro function getBuildDate() {\n\t\t#if !display\n\t\tvar date = Date.now().toString();\n\t\treturn macro $v{date};\n\t\t#else\n\t\tvar date = Date.now().toString();\n\t\treturn macro $v{date};\n\t\t#end\n\t}\n}","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport haxe.iterators.StringIterator;\nimport haxe.iterators.StringKeyValueIterator;\n\n#if cpp\nusing cpp.NativeString;\n#end\n\n/**\n\tThis class provides advanced methods on Strings. It is ideally used with\n\t`using StringTools` and then acts as an [extension](https://haxe.org/manual/lf-static-extension.html)\n\tto the `String` class.\n\n\tIf the first argument to any of the methods is null, the result is\n\tunspecified.\n**/\nclass StringTools {\n\t/**\n\t\tEncode an URL by using the standard format.\n\t**/\n\t#if (!java && !cpp && !lua && !eval) inline #end public static function urlEncode(s:String):String {\n\t\t#if flash\n\t\treturn untyped __global__[\"encodeURIComponent\"](s);\n\t\t#elseif neko\n\t\treturn untyped new String(_urlEncode(s.__s));\n\t\t#elseif js\n\t\treturn untyped encodeURIComponent(s);\n\t\t#elseif cpp\n\t\treturn untyped s.__URLEncode();\n\t\t#elseif java\n\t\treturn postProcessUrlEncode(java.net.URLEncoder.encode(s, \"UTF-8\"));\n\t\t#elseif cs\n\t\treturn untyped cs.system.Uri.EscapeDataString(s);\n\t\t#elseif python\n\t\treturn python.lib.urllib.Parse.quote(s, \"\");\n\t\t#elseif hl\n\t\tvar len = 0;\n\t\tvar b = @:privateAccess s.bytes.urlEncode(len);\n\t\treturn @:privateAccess String.__alloc__(b, len);\n\t\t#elseif lua\n\t\ts = lua.NativeStringTools.gsub(s, \"\\n\", \"\\r\\n\");\n\t\ts = lua.NativeStringTools.gsub(s, \"([^%w %-%_%.%~])\", function(c) {\n\t\t\treturn lua.NativeStringTools.format(\"%%%02X\", lua.NativeStringTools.byte(c) + '');\n\t\t});\n\t\ts = lua.NativeStringTools.gsub(s, \" \", \"+\");\n\t\treturn s;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t}\n\n\t#if java\n\tprivate static function postProcessUrlEncode(s:String):String {\n\t\tvar ret = new StringBuf();\n\t\tvar i = 0, len = s.length;\n\t\twhile (i < len) {\n\t\t\tswitch (_charAt(s, i++)) {\n\t\t\t\tcase '+'.code:\n\t\t\t\t\tret.add('%20');\n\t\t\t\tcase '%'.code if (i <= len - 2):\n\t\t\t\t\tvar c1 = _charAt(s, i++), c2 = _charAt(s, i++);\n\t\t\t\t\tswitch [c1, c2] {\n\t\t\t\t\t\tcase ['2'.code, '1'.code]:\n\t\t\t\t\t\t\tret.addChar('!'.code);\n\t\t\t\t\t\tcase ['2'.code, '7'.code]:\n\t\t\t\t\t\t\tret.addChar('\\''.code);\n\t\t\t\t\t\tcase ['2'.code, '8'.code]:\n\t\t\t\t\t\t\tret.addChar('('.code);\n\t\t\t\t\t\tcase ['2'.code, '9'.code]:\n\t\t\t\t\t\t\tret.addChar(')'.code);\n\t\t\t\t\t\tcase ['7'.code, 'E'.code] | ['7'.code, 'e'.code]:\n\t\t\t\t\t\t\tret.addChar('~'.code);\n\t\t\t\t\t\tcase _:\n\t\t\t\t\t\t\tret.addChar('%'.code);\n\t\t\t\t\t\t\tret.addChar(cast c1);\n\t\t\t\t\t\t\tret.addChar(cast c2);\n\t\t\t\t\t}\n\t\t\t\tcase var chr:\n\t\t\t\t\tret.addChar(cast chr);\n\t\t\t}\n\t\t}\n\t\treturn ret.toString();\n\t}\n\t#end\n\n\t/**\n\t\tDecode an URL using the standard format.\n\t**/\n\t#if (!java && !cpp && !lua && !eval) inline #end public static function urlDecode(s:String):String {\n\t\t#if flash\n\t\treturn untyped __global__[\"decodeURIComponent\"](s.split(\"+\").join(\" \"));\n\t\t#elseif neko\n\t\treturn untyped new String(_urlDecode(s.__s));\n\t\t#elseif js\n\t\treturn untyped decodeURIComponent(s.split(\"+\").join(\" \"));\n\t\t#elseif cpp\n\t\treturn untyped s.__URLDecode();\n\t\t#elseif java\n\t\ttry\n\t\t\treturn java.net.URLDecoder.decode(s, \"UTF-8\")\n\t\tcatch (e:Dynamic)\n\t\t\tthrow e;\n\t\t#elseif cs\n\t\treturn untyped cs.system.Uri.UnescapeDataString(s);\n\t\t#elseif python\n\t\treturn python.lib.urllib.Parse.unquote(s);\n\t\t#elseif hl\n\t\tvar len = 0;\n\t\tvar b = @:privateAccess s.bytes.urlDecode(len);\n\t\treturn @:privateAccess String.__alloc__(b, len);\n\t\t#elseif lua\n\t\ts = lua.NativeStringTools.gsub(s, \"+\", \" \");\n\t\ts = lua.NativeStringTools.gsub(s, \"%%(%x%x)\", function(h) {\n\t\t\treturn lua.NativeStringTools.char(lua.Lua.tonumber(h, 16));\n\t\t});\n\t\ts = lua.NativeStringTools.gsub(s, \"\\r\\n\", \"\\n\");\n\t\treturn s;\n\t\t#else\n\t\treturn null;\n\t\t#end\n\t}\n\n\t/**\n\t\tEscapes HTML special characters of the string `s`.\n\n\t\tThe following replacements are made:\n\n\t\t- `&` becomes `&amp`;\n\t\t- `<` becomes `&lt`;\n\t\t- `>` becomes `&gt`;\n\n\t\tIf `quotes` is true, the following characters are also replaced:\n\n\t\t- `\"` becomes `&quot`;\n\t\t- `'` becomes `&#039`;\n\t**/\n\tpublic static function htmlEscape(s:String, ?quotes:Bool):String {\n\t\tvar buf = new StringBuf();\n\t\tfor (code in #if neko iterator(s) #else new haxe.iterators.StringIteratorUnicode(s) #end) {\n\t\t\tswitch (code) {\n\t\t\t\tcase '&'.code:\n\t\t\t\t\tbuf.add(\"&amp;\");\n\t\t\t\tcase '<'.code:\n\t\t\t\t\tbuf.add(\"&lt;\");\n\t\t\t\tcase '>'.code:\n\t\t\t\t\tbuf.add(\"&gt;\");\n\t\t\t\tcase '\"'.code if (quotes):\n\t\t\t\t\tbuf.add(\"&quot;\");\n\t\t\t\tcase '\\''.code if (quotes):\n\t\t\t\t\tbuf.add(\"&#039;\");\n\t\t\t\tcase _:\n\t\t\t\t\tbuf.addChar(code);\n\t\t\t}\n\t\t}\n\t\treturn buf.toString();\n\t}\n\n\t/**\n\t\tUnescapes HTML special characters of the string `s`.\n\n\t\tThis is the inverse operation to htmlEscape, i.e. the following always\n\t\tholds: `htmlUnescape(htmlEscape(s)) == s`\n\n\t\tThe replacements follow:\n\n\t\t- `&amp;` becomes `&`\n\t\t- `&lt;` becomes `<`\n\t\t- `&gt;` becomes `>`\n\t\t- `&quot;` becomes `\"`\n\t\t- `&#039;` becomes `'`\n\t**/\n\tpublic static function htmlUnescape(s:String):String {\n\t\treturn s.split(\"&gt;\")\n\t\t\t.join(\">\")\n\t\t\t.split(\"&lt;\")\n\t\t\t.join(\"<\")\n\t\t\t.split(\"&quot;\")\n\t\t\t.join('\"')\n\t\t\t.split(\"&#039;\")\n\t\t\t.join(\"'\")\n\t\t\t.split(\"&amp;\")\n\t\t\t.join(\"&\");\n\t}\n\n\t/**\n\t\tReturns `true` if `s` contains `value` and  `false` otherwise.\n\n\t\tWhen `value` is `null`, the result is unspecified.\n\t**/\n\tpublic static inline function contains(s:String, value:String):Bool {\n\t\t#if (js && js_es >= 6)\n\t\treturn (cast s).includes(value);\n\t\t#else \n\t\treturn s.indexOf(value) != -1;\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the string `s` starts with the string `start`.\n\n\t\tIf `start` is `null`, the result is unspecified.\n\n\t\tIf `start` is the empty String `\"\"`, the result is true.\n\t**/\n\tpublic static #if (cs || java || python || (js && js_es >= 6)) inline #end function startsWith(s:String, start:String):Bool {\n\t\t#if java\n\t\treturn (cast s : java.NativeString).startsWith(start);\n\t\t#elseif cs\n\t\treturn untyped s.StartsWith(start);\n\t\t#elseif hl\n\t\treturn @:privateAccess (s.length >= start.length && s.bytes.compare(0, start.bytes, 0, start.length << 1) == 0);\n\t\t#elseif python\n\t\treturn python.NativeStringTools.startswith(s, start);\n\t\t#elseif (js && js_es >= 6)\n\t\treturn (cast s).startsWith(start);\n\t\t#else\n\t\treturn (s.length >= start.length && s.lastIndexOf(start, 0) == 0);\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the string `s` ends with the string `end`.\n\n\t\tIf `end` is `null`, the result is unspecified.\n\n\t\tIf `end` is the empty String `\"\"`, the result is true.\n\t**/\n\tpublic static #if (cs || java || python || (js && js_es >= 6)) inline #end function endsWith(s:String, end:String):Bool {\n\t\t#if java\n\t\treturn (cast s : java.NativeString).endsWith(end);\n\t\t#elseif cs\n\t\treturn untyped s.EndsWith(end);\n\t\t#elseif hl\n\t\tvar elen = end.length;\n\t\tvar slen = s.length;\n\t\treturn @:privateAccess (slen >= elen && s.bytes.compare((slen - elen) << 1, end.bytes, 0, elen << 1) == 0);\n\t\t#elseif python\n\t\treturn python.NativeStringTools.endswith(s, end);\n\t\t#elseif (js && js_es >= 6)\n\t\treturn (cast s).endsWith(end);\n\t\t#else\n\t\tvar elen = end.length;\n\t\tvar slen = s.length;\n\t\treturn (slen >= elen && s.indexOf(end, (slen - elen)) == (slen - elen));\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the character in the string `s` at position `pos` is a space.\n\n\t\tA character is considered to be a space character if its character code\n\t\tis 9,10,11,12,13 or 32.\n\n\t\tIf `s` is the empty String `\"\"`, or if pos is not a valid position within\n\t\t`s`, the result is false.\n\t**/\n\tpublic static function isSpace(s:String, pos:Int):Bool {\n\t\t#if (python || lua)\n\t\tif (s.length == 0 || pos < 0 || pos >= s.length)\n\t\t\treturn false;\n\t\t#end\n\t\tvar c = s.charCodeAt(pos);\n\t\treturn (c > 8 && c < 14) || c == 32;\n\t}\n\n\t/**\n\t\tRemoves leading space characters of `s`.\n\n\t\tThis function internally calls `isSpace()` to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String `\"\"` or consists only of space characters, the\n\t\tresult is the empty String `\"\"`.\n\t**/\n\tpublic #if cs inline #end static function ltrim(s:String):String {\n\t\t#if cs\n\t\treturn untyped s.TrimStart();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile (r < l && isSpace(s, r)) {\n\t\t\tr++;\n\t\t}\n\t\tif (r > 0)\n\t\t\treturn s.substr(r, l - r);\n\t\telse\n\t\t\treturn s;\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves trailing space characters of `s`.\n\n\t\tThis function internally calls `isSpace()` to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String `\"\"` or consists only of space characters, the\n\t\tresult is the empty String `\"\"`.\n\t**/\n\tpublic #if cs inline #end static function rtrim(s:String):String {\n\t\t#if cs\n\t\treturn untyped s.TrimEnd();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile (r < l && isSpace(s, l - r - 1)) {\n\t\t\tr++;\n\t\t}\n\t\tif (r > 0) {\n\t\t\treturn s.substr(0, l - r);\n\t\t} else {\n\t\t\treturn s;\n\t\t}\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves leading and trailing space characters of `s`.\n\n\t\tThis is a convenience function for `ltrim(rtrim(s))`.\n\t**/\n\tpublic #if (cs || java) inline #end static function trim(s:String):String {\n\t\t#if cs\n\t\treturn untyped s.Trim();\n\t\t#elseif java\n\t\treturn (cast s : java.NativeString).trim();\n\t\t#else\n\t\treturn ltrim(rtrim(s));\n\t\t#end\n\t}\n\n\t/**\n\t\tConcatenates `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String `\"\"` or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function lpad(s:String, c:String, l:Int):String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\tvar buf = new StringBuf();\n\t\tl -= s.length;\n\t\twhile (buf.length < l) {\n\t\t\tbuf.add(c);\n\t\t}\n\t\tbuf.add(s);\n\t\treturn buf.toString();\n\t}\n\n\t/**\n\t\tAppends `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String `\"\"` or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function rpad(s:String, c:String, l:Int):String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\tvar buf = new StringBuf();\n\t\tbuf.add(s);\n\t\twhile (buf.length < l) {\n\t\t\tbuf.add(c);\n\t\t}\n\t\treturn buf.toString();\n\t}\n\n\t/**\n\t\tReplace all occurrences of the String `sub` in the String `s` by the\n\t\tString `by`.\n\n\t\tIf `sub` is the empty String `\"\"`, `by` is inserted after each character\n\t\tof `s` except the last one. If `by` is also the empty String `\"\"`, `s`\n\t\tremains unchanged.\n\n\t\tIf `sub` or `by` are null, the result is unspecified.\n\t**/\n\tpublic static function replace(s:String, sub:String, by:String):String {\n\t\t#if java\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn (cast s : java.NativeString).replace(sub, by);\n\t\t#elseif cs\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.Replace(sub, by);\n\t\t#else\n\t\treturn s.split(sub).join(by);\n\t\t#end\n\t}\n\n\t/**\n\t\tEncodes `n` into a hexadecimal representation.\n\n\t\tIf `digits` is specified, the resulting String is padded with \"0\" until\n\t\tits `length` equals `digits`.\n\t**/\n\tpublic static function hex(n:Int, ?digits:Int) {\n\t\t#if flash\n\t\tvar n:UInt = n;\n\t\tvar s:String = untyped n.toString(16);\n\t\ts = s.toUpperCase();\n\t\t#else\n\t\tvar s = \"\";\n\t\tvar hexChars = \"0123456789ABCDEF\";\n\t\tdo {\n\t\t\ts = hexChars.charAt(n & 15) + s;\n\t\t\tn >>>= 4;\n\t\t} while (n > 0);\n\t\t#end\n\t\t#if python\n\t\tif (digits != null && s.length < digits) {\n\t\t\tvar diff = digits - s.length;\n\t\t\tfor (_ in 0...diff) {\n\t\t\t\ts = \"0\" + s;\n\t\t\t}\n\t\t}\n\t\t#else\n\t\tif (digits != null)\n\t\t\twhile (s.length < digits)\n\t\t\t\ts = \"0\" + s;\n\t\t#end\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReturns the character code at position `index` of String `s`, or an\n\t\tend-of-file indicator at if `position` equals `s.length`.\n\n\t\tThis method is faster than `String.charCodeAt()` on some platforms, but\n\t\tthe result is unspecified if `index` is negative or greater than\n\t\t`s.length`.\n\n\t\tEnd of file status can be checked by calling `StringTools.isEof()` with\n\t\tthe returned value as argument.\n\n\t\tThis operation is not guaranteed to work if `s` contains the `\\0`\n\t\tcharacter.\n\t**/\n\tpublic static #if !eval inline #end function fastCodeAt(s:String, index:Int):Int {\n\t\t#if neko\n\t\treturn untyped __dollar__sget(s.__s, index);\n\t\t#elseif cpp\n\t\treturn untyped s.cca(index);\n\t\t#elseif flash\n\t\treturn untyped s.cca(index);\n\t\t#elseif java\n\t\treturn (index < s.length) ? cast(_charAt(s, index), Int) : -1;\n\t\t#elseif cs\n\t\treturn (cast(index, UInt) < s.length) ? cast(s[index], Int) : -1;\n\t\t#elseif js\n\t\treturn (cast s).charCodeAt(index);\n\t\t#elseif python\n\t\treturn if (index >= s.length) -1 else python.internal.UBuiltins.ord(python.Syntax.arrayAccess(s, index));\n\t\t#elseif hl\n\t\treturn @:privateAccess s.bytes.getUI16(index << 1);\n\t\t#elseif lua\n\t\t#if lua_vanilla\n\t\treturn lua.NativeStringTools.byte(s, index + 1);\n\t\t#else\n\t\treturn lua.lib.luautf8.Utf8.byte(s, index + 1);\n\t\t#end\n\t\t#else\n\t\treturn untyped s.cca(index);\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns the character code at position `index` of String `s`, or an\n\t\tend-of-file indicator at if `position` equals `s.length`.\n\n\t\tThis method is faster than `String.charCodeAt()` on some platforms, but\n\t\tthe result is unspecified if `index` is negative or greater than\n\t\t`s.length`.\n\n\t\tThis operation is not guaranteed to work if `s` contains the `\\0`\n\t\tcharacter.\n\t**/\n\tpublic static #if !eval inline #end function unsafeCodeAt(s:String, index:Int):Int {\n\t\t#if neko\n\t\treturn untyped __dollar__sget(s.__s, index);\n\t\t#elseif cpp\n\t\treturn untyped s.cca(index);\n\t\t#elseif flash\n\t\treturn untyped s.cca(index);\n\t\t#elseif java\n\t\treturn cast(_charAt(s, index), Int);\n\t\t#elseif cs\n\t\treturn cast(s[index], Int);\n\t\t#elseif js\n\t\treturn (cast s).charCodeAt(index);\n\t\t#elseif python\n\t\treturn python.internal.UBuiltins.ord(python.Syntax.arrayAccess(s, index));\n\t\t#elseif hl\n\t\treturn @:privateAccess s.bytes.getUI16(index << 1);\n\t\t#elseif lua\n\t\t#if lua_vanilla\n\t\treturn lua.NativeStringTools.byte(s, index + 1);\n\t\t#else\n\t\treturn lua.lib.luautf8.Utf8.byte(s, index + 1);\n\t\t#end\n\t\t#else\n\t\treturn untyped s.cca(index);\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns an iterator of the char codes.\n\n\t\tNote that char codes may differ across platforms because of different\n\t\tinternal encoding of strings in different runtimes.\n\t\tFor the consistent cross-platform UTF8 char codes see `haxe.iterators.StringIteratorUnicode`.\n\t**/\n\tpublic static inline function iterator(s:String):StringIterator {\n\t\treturn new StringIterator(s);\n\t}\n\n\t/**\n\t\tReturns an iterator of the char indexes and codes.\n\n\t\tNote that char codes may differ across platforms because of different\n\t\tinternal encoding of strings in different of runtimes.\n\t\tFor the consistent cross-platform UTF8 char codes see `haxe.iterators.StringKeyValueIteratorUnicode`.\n\t**/\n\tpublic static inline function keyValueIterator(s:String):StringKeyValueIterator {\n\t\treturn new StringKeyValueIterator(s);\n\t}\n\n\t/**\n\t\tTells if `c` represents the end-of-file (EOF) character.\n\t**/\n\t@:noUsing public static inline function isEof(c:Int):Bool {\n\t\t#if (flash || cpp || hl)\n\t\treturn c == 0;\n\t\t#elseif js\n\t\treturn c != c; // fast NaN\n\t\t#elseif (neko || lua || eval)\n\t\treturn c == null;\n\t\t#elseif (cs || java || python)\n\t\treturn c == -1;\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t}\n\n\t/**\n\t\tReturns a String that can be used as a single command line argument\n\t\ton Unix.\n\t\tThe input will be quoted, or escaped if necessary.\n\t**/\n\t@:noCompletion\n\t@:deprecated('StringTools.quoteUnixArg() is deprecated. Use haxe.SysTools.quoteUnixArg() instead.')\n\tpublic static function quoteUnixArg(argument:String):String {\n\t\treturn inline haxe.SysTools.quoteUnixArg(argument);\n\t}\n\n\t/**\n\t\tCharacter codes of the characters that will be escaped by `quoteWinArg(_, true)`.\n\t**/\n\t@:noCompletion\n\t@:deprecated('StringTools.winMetaCharacters is deprecated. Use haxe.SysTools.winMetaCharacters instead.')\n\tpublic static var winMetaCharacters:Array<Int> = cast haxe.SysTools.winMetaCharacters;\n\n\t/**\n\t\tReturns a String that can be used as a single command line argument\n\t\ton Windows.\n\t\tThe input will be quoted, or escaped if necessary, such that the output\n\t\twill be parsed as a single argument using the rule specified in\n\t\thttp://msdn.microsoft.com/en-us/library/ms880421\n\n\t\tExamples:\n\t\t```haxe\n\t\tquoteWinArg(\"abc\") == \"abc\";\n\t\tquoteWinArg(\"ab c\") == '\"ab c\"';\n\t\t```\n\t**/\n\t@:noCompletion\n\t@:deprecated('StringTools.quoteWinArg() is deprecated. Use haxe.SysTools.quoteWinArg() instead.')\n\tpublic static function quoteWinArg(argument:String, escapeMetaCharacters:Bool):String {\n\t\treturn inline haxe.SysTools.quoteWinArg(argument, escapeMetaCharacters);\n\t}\n\n\t#if java\n\tprivate static inline function _charAt(str:String, idx:Int):java.StdTypes.Char16\n\t\treturn (cast str : java.NativeString).charAt(idx);\n\t#end\n\n\t#if neko\n\tprivate static var _urlEncode = neko.Lib.load(\"std\", \"url_encode\", 1);\n\tprivate static var _urlDecode = neko.Lib.load(\"std\", \"url_decode\", 1);\n\t#end\n\n\t#if utf16\n\tstatic inline var MIN_SURROGATE_CODE_POINT = 65536;\n\n\tstatic inline function utf16CodePointAt(s:String, index:Int):Int {\n\t\tvar c = StringTools.fastCodeAt(s, index);\n\t\tif (c >= 0xD800 && c <= 0xDBFF) {\n\t\t\tc = ((c - 0xD7C0) << 10) | (StringTools.fastCodeAt(s, index + 1) & 0x3FF);\n\t\t}\n\t\treturn c;\n\t}\n\t#end\n}\n","/*\n * Copyright (C)2005-2018 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.iterators;\n\n/**\n\tThis iterator is used only when `Array<T>` is passed to `Iterable<T>`\n**/\nclass ArrayIterator<T> {\n\tfinal array:Array<T>;\n\tvar current:Int = 0;\n\n\t/**\n\t\tCreate a new `ArrayIterator`.\n\t**/\n\t#if !hl inline #end\n\tpublic function new(array:Array<T>) {\n\t\tthis.array = array;\n\t}\n\n\t/**\n\t\tSee `Iterator.hasNext`\n\t**/\n\t#if !hl inline #end\n\tpublic function hasNext() {\n\t\treturn current < array.length;\n\t}\n\n\t/**\n\t\tSee `Iterator.next`\n\t**/\n\t#if !hl inline #end\n\tpublic function next() {\n\t\treturn array[current++];\n\t}\n}\n"],
"names":[],
"mappings":"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"
}